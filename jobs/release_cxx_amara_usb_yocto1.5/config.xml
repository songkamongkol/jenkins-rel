<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain/>
      <token/>
      <room/>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>5.05_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BLL_BUILD_NUMBER</name>
          <description>This is used to pass a common build number to all IL and BLL build jobs run during the nightly build process.</description>
          <defaultValue>BAD_BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description/>
          <defaultValue>5.05</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_OS</name>
          <description/>
          <defaultValue>IL</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_ID</name>
          <description/>
          <defaultValue>6</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>AV_BUILD_NUMBER</name>
          <description/>
          <defaultValue>BAD_BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>OUTPUT_DIR</name>
          <description/>
          <defaultValue>\\storage\gr\TestCenter\4.62\SR_Builds\SR462.1.2</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SR</name>
          <description>Example: 465.1.1. 
NOTE: if any value other than none is provided, the job will try to upload the usb image to the directory specified by the SR number (.e.g, \\storage.cal.ci.spirentcom.com\gr\TestCenter\4.65\SR_Builds\SR465.1.1\Manufacturing)</description>
          <defaultValue>NONE</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>INCLUDE_APPSEC_PKG</name>
          <description/>
          <defaultValue>TRUE</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.multiplescms.MultiSCM" plugin="multiple-scms@0.6">
    <scms>
      <org.jenkinsci.plugins.p4.PerforceScm plugin="p4@1.7.7">
        <credential>scmbuild</credential>
        <workspace class="org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl">
          <charset>none</charset>
          <pinHost>false</pinHost>
          <name>jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}</name>
          <spec>
            <allwrite>false</allwrite>
            <clobber>false</clobber>
            <compress>false</compress>
            <locked>false</locked>
            <modtime>false</modtime>
            <rmdir>false</rmdir>
            <streamName/>
            <line>LOCAL</line>
            <view>//SCM/Scripts/ci_* //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/Build_Scripts/Scripts/ci_*
//TestCenter/${BRANCH_NAME}/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/...
-//TestCenter/*/sandbox/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/sandbox/...
-//TestCenter/*/.../WebHelp/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../WebHelp/...
-//TestCenter/*/Bakeoff_TestCaseScripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/Bakeoff_TestCaseScripts/... 
-//TestCenter/*/other/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/other/...
-//TestCenter/*/documents/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/documents/...
-//TestCenter/*/schedules/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/schedules/...
-//TestCenter/*/scm/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/scm/...
-//TestCenter/*/dmcp/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/dmcp/...
-//TestCenter/*/regression/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/regression/... 
-//TestCenter/*/userdocauto/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/userdocauto/...
-//TestCenter/*/common/lib/boost_1_34_0/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/common/lib/boost_1_34_0/...
-//TestCenter/*/framework/ui/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/framework/ui/... 
-//TestCenter/*/content/.../ui/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/content/.../ui/...
-//TestCenter/*/.../bll/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../bll/...
+//TestCenter/${BRANCH_NAME}/framework/bll/base/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/bll/base/...
+//TestCenter/${BRANCH_NAME}/framework/bll/unittestdrv/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/bll/unittestdrv/...
+//TestCenter/${BRANCH_NAME}/framework/bll/vendor/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/bll/vendor/...
//hypervisor/mainline/amara/ChassisImage/...  //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/ChassisImage/...
//TARDIS/avalanche_release/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/traffic/l4l7vm/...
//TARDIS/Studio_release/avanext/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/traffic/studio_perf/avanext/...</view>
            <type>WRITABLE</type>
            <serverID/>
            <backup>false</backup>
          </spec>
        </workspace>
        <populate class="org.jenkinsci.plugins.p4.populate.SyncOnlyImpl">
          <have>true</have>
          <force>false</force>
          <modtime>false</modtime>
          <quiet>true</quiet>
          <pin/>
          <parallel>
            <enable>false</enable>
            <threads>4</threads>
            <minfiles>1</minfiles>
            <minbytes>1024</minbytes>
          </parallel>
          <revert>false</revert>
        </populate>
      </org.jenkinsci.plugins.p4.PerforceScm>
      <hudson.plugins.git.GitSCM plugin="git@3.3.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
          <hudson.plugins.git.UserRemoteConfig>
            <refspec>+refs/tags/*:refs/remotes/origin/tags/*</refspec>
            <url>ssh://git@git-appsec.cal.ci.spirentcom.com:2222/git-server/repos/appsec_l4l7.git</url>
            <credentialsId>5c922c1a-3cc4-4b9c-87a7-0f81202bcd09</credentialsId>
          </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
          <hudson.plugins.git.BranchSpec>
            <name>*/tags/rMP5.04_rel</name>
          </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
          <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
            <relativeTargetDir>content/Avalanche</relativeTargetDir>
          </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        </extensions>
      </hudson.plugins.git.GitSCM>
    </scms>
  </scm>
  <quietPeriod>120</quietPeriod>
  <assignedNode>ilpkg-v21</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <authToken>meenuallowedtodothis</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command># p4 sync -f //TARDIS/avalanche_release/...@796337</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>env
echo $SCMBUILD_PASSWORD | p4 login
p4 revert //...

echo Clean up prior to extracting tarballs

# make the version file writeable
[ -f $WORKSPACE/build/il/version ] &amp;&amp; chmod 777 $WORKSPACE/build/il/version

# need to remove information in repos directory and packages directory
rm -rf $WORKSPACE/build/il/repos/*
rm -rf $WORKSPACE/build/il/bld_appliance
sudo scons target=packageclean

rm -f $WORKSPACE/*.txt

# -- ensure content/Avalanche is synced (there is a known issue with git plugin as sometimes it removes Perforce files in this directory)
p4 -u scmbuild -p perforce.spirentcom.com:1666 -c jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME} sync -f //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/Avalanche/...

# 2016-01-18: Temporary for 4.61, unshelve Ramana's change to fix AV l4l7vm version issue
# cp -f /home/spirent/appliance_usb /home/spirent/jenkins-rel/workspace/release_cxx_amara_usb_yocto1.5/build/il/scripts/targets/appliance_usb</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

# -- setup build number and path based on the branch name
if [ "$BRANCH_NAME" = "integration" ]; then
     export BRANCH_ID='3'
fi

if [ "$BRANCH_NAME" = "release" ]; then
     export BRANCH_ID='6'
fi

if [[ $BRANCH_NAME = *_rel* ]]; then
     export BRANCH_ID='6'
fi
export PADDING=''

if [ $BLL_BUILD_NUMBER -lt 100 ]; then 
   export PADDING='0'
fi;

if [ $BLL_BUILD_NUMBER -lt 10 ]; then 
   export PADDING='00'
fi;




# check if the build specified in the parameter exists
# export FULL_BUILD=${STC_MAJ_MIN_VERSION}.${PADDING}${BLL_BUILD_NUMBER}${BRANCH_ID}
# export aonic_file=/gibson/TestCenter/${STC_MAJ_MIN_VERSION}/Engineering_Builds/IL/${FULL_BUILD}/fsimg/appliance-${FULL_BUILD}-fs-1.1.tgz
# export aonic_md5_file=/gibson/TestCenter/${STC_MAJ_MIN_VERSION}/Engineering_Builds/IL/${FULL_BUILD}/fsimg/appliance-${FULL_BUILD}-fs-1.1.tgz.md5
# export c3_file=/gibson/TestCenter/${STC_MAJ_MIN_VERSION}/Engineering_Builds/IL/${FULL_BUILD}/fsimg/controller3-${FULL_BUILD}-fs-1.1.tgz
# export c3_md5_file=/gibson/TestCenter/${STC_MAJ_MIN_VERSION}/Engineering_Builds/IL/${FULL_BUILD}/fsimg/controller3-${FULL_BUILD}-fs-1.1.tgz.md5
# if [ -f $aonic_file ]; then
# echo "Applicance file: $aonic_file"
# else
# echo "Applicance file '$aonic_file'  not found, aborting"
# exit 1
# fi

# mkdir -p $WORKSPACE/build/il/packages/fsimg
# cp -v $aonic_file $WORKSPACE/build/il/packages/fsimg
# cp -v $aonic_md5_file $WORKSPACE/build/il/packages/fsimg
# cp -v $c3_file $WORKSPACE/build/il/packages/fsimg
# cp -v $c3_md5_file $WORKSPACE/build/il/packages/fsimg</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># update version file
# python $WORKSPACE/Build_Scripts/Scripts/ci_run_jenkins_steps.py --createversionfile=yes</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ "$AV_BUILD_NUMBER" = "BAD_BUILD_NUMBER" ]; then
	echo $SCMBUILD_PASSWORD | p4 login
    export DESC=`p4 describe $(p4 changes -m1 content/traffic/l4l7vm/... | awk '{print $2}') |grep Description\:`
    export AV_BUILD_NUMBER=${DESC: -9}
    echo "No explicit AV build number has been specified in the job parameter, obtaining AV build number from Perforce check-in ..."
    echo "Setting AV Build number to $AV_BUILD_NUMBER"
fi

echo 'Creating C1/C100 USB image (Appliance)'
rm -rf $WORKSPACE/framework/il/kernel/yocto/spirent-linux
if [ "$INCLUDE_APPSEC_PKG" = "TRUE" ]; then
    export VM_PROFILE=all
    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 appliance_yocto_tardis3_mix

    l4l7lxc_storage=/mnt/builds/jenkins/l4l7lxc
    mkdir -p $WORKSPACE/build/il/packages/rawimg
    l4l7lxc_buildno=$(ls ${l4l7lxc_storage}/l4l7lxc*.tgz | awk -F '-' '{print $2}' | sed 's/\.tgz//g')
    cp -f ${l4l7lxc_storage}/*.tgz $WORKSPACE/build/il/packages/rawimg

    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 av_version=${l4l7lxc_buildno} appliance_packaging  
    rm -rf $WORKSPACE/framework/il/kernel/yocto/spirent-linux
    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 appliance_hypervisor_mix
    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 appliance_usb
else
    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 appliance_hypervisor_stc_only
    $WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 appliance_usb_stc_only
fi

export RAW_BLDSTR=${BLL_BUILD_NUMBER}${BRANCH_ID}
printf -v BLDNUMBER "%04d" ${RAW_BLDSTR#0}

if [ "$AV_BUILD_NUMBER" = "" ]; then
    export AV_BUILD_NUMBER=${STC_MAJ_MIN_VERSION}.${BLDNUMBER}
    echo "Setting AV Build number to ${STC_MAJ_MIN_VERSION}.${BLDNUMBER}"
fi

sudo $WORKSPACE/build/il/scripts/reversion_il.sh ${STC_MAJ_MIN_VERSION}.${BLDNUMBER} ${AV_BUILD_NUMBER}
$WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 il_version=${STC_MAJ_MIN_VERSION}.${BLDNUMBER} usbimg_cxxx
# rm -rf $WORKSPACE/framework/il/kernel/yocto/Install/usbimg_cxxx-1.5.img.gz
# gzip $WORKSPACE/framework/il/kernel/yocto/Install/usbimg_cxxx-1.5.img</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo 'Creating Amara/Controller3 USB image (Yocto 1.5)'
$WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 c3_hypervisor
$WORKSPACE/build/il/scripts/phxbld -j32 yocto_ver=1.5 c3_usb   
rm -rf $WORKSPACE/framework/il/kernel/yocto/Install/usb_amara-1.5.img.gz
gzip $WORKSPACE/framework/il/kernel/yocto/Install/usb_amara-1.5.img
rm -rf $WORKSPACE/framework/il/kernel/yocto/Install/usbimg_cxxx_x11-1.5.img.gz 
gzip $WORKSPACE/framework/il/kernel/yocto/Install/usbimg_cxxx_x11-1.5.img
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>export RSYNCUSER=scm
export BUILD_OUTPUT_DIR=$WORKSPACE
export MARTIN_ROOT=/spirent/data/archive/pv/TestCenter
export MARTIN=martin.spirentcom.com
export RAW_BLDSTR=${BLL_BUILD_NUMBER}${BRANCH_ID}
printf -v BLDNUMBER "%04d" ${RAW_BLDSTR#0}
export BLDNBR=${STC_MAJ_MIN_VERSION}.${BLDNUMBER}
export BUILD_DIR=$MARTIN_ROOT/$STC_MAJ_MIN_VERSION/Engineering_Builds/IL/$BLDNBR

ssh ${RSYNCUSER}@${MARTIN} mkdir -p $BUILD_DIR/usbimg
rsync -avz $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install/usb*1.5*.img.gz ${RSYNCUSER}@${MARTIN}:$BUILD_DIR/usbimg

# trim white space from SR
export SR="$(echo -e "${SR}" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')"

if [ "$SR" != "NONE" ];
then
    echo "Rsync USB image to -SR{$SR}-"
    export RSYNCUSER=spirent
    export STORAGE=storage.cal.ci.spirentcom.com
    export SR_DIR=/GR/TestCenter/${STC_MAJ_MIN_VERSION}/SR_Builds/SR${SR}/Manufacturing
    cd $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install
    sudo rm -rf spt-c1-x11*.img.gz
    sudo rm -rf ctl3image*.img.gz
    
    # c1/100 usb image upload
    export original_fname=$(ls usbimg*cxxx*x11*.img.gz)
    export new_fname=spt-c1-x11_${BLDNBR}.img.gz
    mv ${original_fname} ${new_fname}
    md5sum ${new_fname} &gt; ${new_fname}.md5
    rsync -avz $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install/${new_fname} ${RSYNCUSER}@${STORAGE}:$SR_DIR
    rsync -avz $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install/${new_fname}.md5 ${RSYNCUSER}@${STORAGE}:$SR_DIR

    # amara usb image upload
    export original_fname=$(ls usb_amara*.img.gz)
    export new_fname=ctl3image-${BLDNBR}.img.gz
    mv ${original_fname} ${new_fname}
    md5sum ${new_fname} &gt; ${new_fname}.md5
    rsync -avz $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install/${new_fname} ${RSYNCUSER}@${STORAGE}:$SR_DIR
    rsync -avz $BUILD_OUTPUT_DIR/framework/il/kernel/yocto/Install/${new_fname}.md5 ${RSYNCUSER}@${STORAGE}:$SR_DIR
fi

</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>true</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>devopsteam@spirent.com,emil.mihaylov@spirent.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern/>
      <presendScript/>
      <postsendScript/>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_RECIPIENTS</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <jenkinsci.plugins.influxdb.InfluxDbPublisher plugin="influxdb@1.10.3">
      <selectedTarget>http://influxdb-01.cal.ci.spirentcom.com:8086,release_jenkins_db</selectedTarget>
      <customPrefix/>
    </jenkinsci.plugins.influxdb.InfluxDbPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <EnvInjectBuildWrapper plugin="envinject@1.89">
      <info>
        <propertiesContent>P4PORT=perforce.spirentcom.com:1666
P4USER=scmbuild
P4CLIENT=jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
    <EnvInjectPasswordWrapper plugin="envinject@1.89">
      <injectGlobalPasswords>false</injectGlobalPasswords>
      <passwordEntries>
        <EnvInjectPasswordEntry>
          <name>SCMBUILD_PASSWORD</name>
          <value>f2Hvo1KIv8gNApnbSHftyshJpcR11yUGbEzBlpqCIDg=</value>
        </EnvInjectPasswordEntry>
      </passwordEntries>
    </EnvInjectPasswordWrapper>
    <org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper plugin="preSCMbuildstep@0.3">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>if [[ $P4CLEANWORKSPACE = "true" ]]; then
    if [ ! -z "$WORKSPACE" ]; then
        sudo rm -rf $WORKSPACE/*
        p4 -u scmbuild -p perforce.spirentcom.com:1666 -c jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME} sync //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/...#none &gt; clean.txt 2&gt;&amp;1
    fi
fi</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <failOnError>false</failOnError>
    </org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper>
  </buildWrappers>
</project>