<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>15</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <hudson.plugins.promoted__builds.JobPropertyImpl plugin="promoted-builds@2.28.1">
      <activeProcessNames>
        <string>Release Build Passed Regression</string>
        <string>Release Build Passed on all OS</string>
      </activeProcessNames>
    </hudson.plugins.promoted__builds.JobPropertyImpl>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>4.92_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_RUN_UNITTEST</name>
          <description>run unittest</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_PACKAGE_BUILD</name>
          <description>package build</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_OUTPUT_DIR</name>
          <description>build output dir</description>
          <defaultValue>bin/Release</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_SAVE_PDB</name>
          <description>save pdb</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RELEASE_BUILD</name>
          <description>Flag whether or not this build is a release build candidate. If a build is a release candidate then STC_CR license/entitlement will be disabled
</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description></description>
          <defaultValue>4.92</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.p4.PerforceScm" plugin="p4@1.7.7">
    <credential>tableuser</credential>
    <workspace class="org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl">
      <charset>none</charset>
      <pinHost>false</pinHost>
      <name>jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}</name>
      <spec>
        <allwrite>false</allwrite>
        <clobber>false</clobber>
        <compress>false</compress>
        <locked>false</locked>
        <modtime>false</modtime>
        <rmdir>false</rmdir>
        <streamName></streamName>
        <line>LOCAL</line>
        <view>+//TestCenter/${BRANCH_NAME}/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/...
-//TestCenter/*/Layer1/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/Layer1/...
-//TestCenter/*/userdocauto/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/userdocauto/...
-//TestCenter/*/sandbox/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/sandbox/...
-//TestCenter/*/.../il/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../il/...
-//TestCenter/*/.../hw/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../hw/...
-//TestCenter/*/.../WebHelp/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../WebHelp/...
-//TestCenter/*/content/cts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/content/cts/...
-//TestCenter/*/common/lib/java/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/common/lib/java/... 
-//TestCenter/*/common/tools/scons/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/common/tools/scons/... 
-//TestCenter/*/framework/ui/resultsanalysis/tools/jvm/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/framework/ui/resultsanalysis/tools/jvm/...
-//TestCenter/*/common/lib/boost_1_34_0/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/common/lib/boost_1_34_0/...
-//TestCenter/*/Bakeoff_TestCaseScripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/Bakeoff_TestCaseScripts/... 
-//TestCenter/*/other/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/other/...
-//TestCenter/*/documents/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/documents/... 
-//TestCenter/*/dmcp/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/dmcp/...
-//TestCenter/*/schedules/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/schedules/...
-//TestCenter/*/scm/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/scm/...
-//TestCenter/*/regression/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/regression/... 
+//TestCenter/${BRANCH_NAME}/build/il/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/build/il/...
-//TestCenter/${BRANCH_NAME}/build/il/cli/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/build/il/cli/...
-//TestCenter/${BRANCH_NAME}/build/il/testframework/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/build/il/testframework/...
-//TestCenter/*/common/lib/ACE_wrappers_6.1.6/i386.yocto_i686 //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/common/lib/ACE_wrappers_6.1.6/i386.yocto_i686 
-//TestCenter/*/framework/bll/vendor/lib/i386-* //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/framework/bll/vendor/lib/i386-*
-//TestCenter/*/build/il/version //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/build/il/version
-//TestCenter/*/.../ui/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/*/.../ui/... 
+//TestCenter/${BRANCH_NAME}/common/.../ui/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/common/.../ui/...
+//TestCenter/${BRANCH_NAME}/framework/ui/automation/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/ui/automation/...</view>
        <type>WRITABLE</type>
        <serverID></serverID>
        <backup>false</backup>
      </spec>
    </workspace>
    <populate class="org.jenkinsci.plugins.p4.populate.SyncOnlyImpl">
      <have>true</have>
      <force>false</force>
      <modtime>false</modtime>
      <quiet>true</quiet>
      <pin></pin>
      <parallel>
        <enable>false</enable>
        <threads>4</threads>
        <minfiles>1</minfiles>
        <minbytes>1024</minbytes>
      </parallel>
      <revert>false</revert>
    </populate>
  </scm>
  <assignedNode>bllbuild-win-01</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>del BLL_changelist_*.txt&#xd;
echo %P4_CHANGELIST% %JOB_NAME% %BUILD_NUMBER% &gt; BLL_changelist_%P4_CHANGELIST%.txt&#xd;
&#xd;
&#xd;
&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>echo P4CHANGESTART %P4_CHANGELIST% P4CHANGEEND&#xd;
genSln.bat&#xd;
&#xd;
scons.cmd -v &#xd;
rd /s /q bin\Release\STAKCommands&#xd;
exit /B 0</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>if &quot;%RELEASE_BUILD%&quot; == &quot;true&quot; (&#xd;
attrib -r framework\bll\core\include\licensing\ControlledReleaseCheck.h&#xd;
copy framework\bll\core\include\licensing\ga_release\ControlledReleaseCheck.h framework\bll\core\include\licensing\ControlledReleaseCheck.h /y&#xd;
&#xd;
)</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command># update ILVersion.xml file as this is needed by NTAF
import os
import sys
import subprocess
import optparse
import glob
import shutil
import re

stc_maj_min_ver=os.environ[&apos;STC_MAJ_MIN_VERSION&apos;]
print &quot;\nIN:_run_update_ilversion_xml&quot;
ilversion_xml_path = os.path.join(os.environ[&apos;WORKSPACE&apos;], &apos;framework&apos;, &apos;bll&apos;, &apos;core&apos;, &apos;install&apos;, &apos;release&apos;, &apos;ILVersion.xml&apos;)
tmpfile = ilversion_xml_path + &quot;.new&quot;
print &quot;ILVerson.xml path: &quot;, ilversion_xml_path

ilbuildnumber = &apos;0000&apos;

f1 = open(ilversion_xml_path, &apos;r&apos;) 
f2 = open(&apos;yourBigFile.txt.tmp&apos;, &apos;w&apos;) 
for line in f1.readlines(): 
	match = re.search( &apos;StcSystem Version=&apos; , line )
	if match : 
	    line = &apos;&lt;StcSystem Version=&quot;&apos; + stc_maj_min_ver + &apos;&quot;&gt;\n&apos;

	match = re.search( &apos;TestModule Id=&apos; , line )
	if match : 
	        line = &apos;&lt;TestModule Id=&quot;Firmware&quot; Version=\&quot;&apos; + stc_maj_min_ver + &apos;.&apos; + ilbuildnumber + &apos;&quot;&apos; + &apos; CheckExactVersion=&quot;true&quot;/&gt;\n&apos;
	
	match = re.search( &apos;TestPackage Id=&quot;stc&quot;&apos; , line )
	if match : 
	        line = &apos;&lt;TestPackage Id=&quot;stc&quot; Version=&quot;&apos; + stc_maj_min_ver + &apos;.&apos; + ilbuildnumber + &apos;&quot;&apos; + &apos; CheckExactVersion=&quot;true&quot;/&gt;\n&apos;
	
	match = re.search( &apos;TestPackage Id=&quot;l2l3&quot;&apos; , line )
	if match : 
	        line = &apos;&lt;TestPackage Id=&quot;l2l3&quot; Version=&quot;&apos; + stc_maj_min_ver + &apos;.&apos; + ilbuildnumber + &apos;&quot;&apos; + &apos; CheckExactVersion=&quot;true&quot;/&gt;\n&apos;
	f2.write(line) 

f1.close() 
f2.close() 

if os.path.exists(&quot;ILVersion.old&quot;):
	sys.stdout.flush()
	pipe = subprocess.Popen([&quot;cmd&quot;, &quot;/c&quot;, &quot;attrib&quot;,  &quot;-r&quot;, &quot;ILVersion.old&quot;], stdout=subprocess.PIPE)
	pipe.wait()
	attrib_output = pipe.stdout.read()
	print &quot;attrib output: &quot; + attrib_output
	os.remove(&apos;ILVersion.old&apos;)       
	
os.rename(ilversion_xml_path, &quot;ILVersion.old&quot;)
os.rename(&quot;yourBigFile.txt.tmp&quot;, ilversion_xml_path) 
print &quot;_run_update_ilversion_xml: complete&quot;</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.BatchFile>
      <command>rem devenv /build Release Framework.BLL.Gen.sln&#xd;
rem devenv /build Release Plugins.BLL.Gen.sln&#xd;
rem devenv /build Release TestCenter.Automation.Gen.sln&#xd;
&#xd;
.\scons.cmd -j 12 -f SConstruct.bll debug=0 target=bll-win32</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>cd bin\Release&#xd;
rebase.exe -b 0x12000000 -u . *.dll&#xd;
exit /B 0</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>if %BUILD_SAVE_PDB% == true (&#xd;
&#xd;
cd bin\Release&#xd;
rmdir /q /s pdb&#xd;
mkdir pdb&#xd;
copy *.pdb pdb&#xd;
del /q pdb\test*.pdb&#xd;
copy TestCenter*.pdb pdb&#xd;
&#xd;
set P4PORT=perforce.spirentcom.com:1666&#xd;
set P4USER=tableuser&#xd;
set P4CLIENT=%p4Client%&#xd;
&quot;C:\Program Files (x86)\Debugging Tools for Windows (x86)\srcsrv\p4index.cmd&quot; -source=%WORKSPACE% -symbols=pdb -debug&#xd;
&#xd;
&quot;C:\Program Files (x86)\Debugging Tools for Windows (x86)\symstore&quot; add /f %WORKSPACE%\bin\Release\pdb\*.pdb /s \\archive.cal.ci.spirentcom.com\symbols\testcenter_ci /t SpirentTestCenter&#xd;
&quot;C:\Program Files (x86)\Debugging Tools for Windows (x86)\symstore&quot; add /f %WORKSPACE%\bin\Release\*.dll /s \\archive.cal.ci.spirentcom.com\symbols\testcenter_ci /t SpirentTestCenter&#xd;
REM &quot;C:\Program Files (x86)\Debugging Tools for Windows (x86)\agestore&quot; \\archive.cal.ci.spirentcom.com\symbols\testcenter_ci -days 20&#xd;
&#xd;
rmdir /q /s pdb&#xd;
)</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>python.exe framework\tools\buildUtil\pw_build_tracker.py --build_dir=&quot;c:\jenkins\workspace\release_bll_windows_ci\bin\Release&quot;&#xd;
python.exe common\idl\crc.py -f bll_idl_crc.txt --desc &quot;%JOB_NAME% %BUILD_NUMBER%&quot;</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>if %BUILD_RUN_UNITTEST% == true (&#xd;
cd bin\Release&#xd;
python ..\..\framework\tools\testRunner\testRunner.py --runInParallel=8 --bll --stak --archive&#xd;
)</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>import os
import zipfile
import urllib2
import tarfile
import shutil

def _download_file_from_url(url=None):
    file_name = url.split(&apos;/&apos;)[-1]
    u = urllib2.urlopen(url)
    f = open(file_name, &apos;wb&apos;)
    meta = u.info()
    file_size = int(meta.getheaders(&quot;Content-Length&quot;)[0])
    print &quot;Downloading: %s Bytes: %s&quot; % (file_name, file_size)

    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        status = r&quot;%10d  [%3.2f%%]&quot; % (file_size_dl, file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1)
        print status,

    f.close()

def unzip(fname,dir_name):
    if (fname.endswith(&quot;zip&quot;)):
        zip_ref = zipfile.ZipFile(fname, &apos;r&apos;)
        zip_ref.extractall(dir_name)
        zip_ref.close()
        print &quot;Extracted in %s Directory&quot; % dir_name
    else:
        print &quot;Not a zip file: &apos;%s &apos;&quot; % fname

def extract_tarball(fname):
    if (fname.endswith(&quot;tgz&quot;)):
        tar = tarfile.open(fname, &quot;r:gz&quot;)
        tar.extractall()
        tar.close()
    elif (fname.endswith(&quot;tar&quot;)):
       tar = tarfile.open(fname, &quot;r:&quot;)
       tar.extractall()
       tar.close()
        

zip_filename = &apos;orion-res.windows-386.zip&apos;
orion_res_output_dir = os.path.join(os.environ[&apos;WORKSPACE&apos;], &apos;bin&apos;, &apos;Release&apos;, &apos;orion-res&apos;)
if os.path.exists(orion_res_output_dir):
    shutil.rmtree(orion_res_output_dir) # clean up previous output dir if exists
unzip(zip_filename, orion_res_output_dir)


os.chdir(&apos;bin&apos;)
tgz_filename = &apos;magellan-frontend.tgz&apos;
if os.path.exists(&apos;build&apos;):
    shutil.rmtree(&apos;build&apos;) # clean up previous output dir from tgz file if exists
extract_tarball(tgz_filename)
shutil.move(&apos;build&apos;, os.path.join(orion_res_output_dir, &apos;content&apos;))</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.BatchFile>
      <command>cd bin\Release&#xd;
del TestCenter*.tar.gz&#xd;
if %BUILD_PACKAGE_BUILD% == true (&#xd;
python ..\..\framework\tools\buildUtil\package.py --suffix=bll --package=TestCenter &#xd;
python ..\..\framework\tools\buildUtil\package.py --package=STAKCommands.beta&#xd;
)</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>import shutil
import os

output_filename = &apos;orion-res&apos;
dir_name = os.path.join(os.environ[&apos;WORKSPACE&apos;], &apos;bin&apos;, &apos;Release&apos;, &apos;orion-res&apos;)
if os.path.exists(&apos;orion-res.zip&apos;):
    os.remove(&apos;orion-res.zip&apos;)
shutil.make_archive(output_filename, &apos;zip&apos;, dir_name)</command>
    </hudson.plugins.python.Python>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>${BUILD_OUTPUT_DIR}/TestCenter.Windows.bll.tar.gz, ${BUILD_OUTPUT_DIR}/UnitTestLogs.tar.gz, ${BUILD_OUTPUT_DIR}/pw_packages_to_test_report, ${BUILD_OUTPUT_DIR}/pw_packages_to_test, ${BUILD_OUTPUT_DIR}/pw_unknown_files_report, BLL_changelist*.txt, bll_idl_crc.txt, ${BUILD_OUTPUT_DIR}/STAKCommands.beta.Windows.tar.gz,orion-res.zip</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@2.0">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <showGraphs>false</showGraphs>
      <parsingRulesPath>/var/lib/jenkins/log_parse_rule</parsingRulesPath>
      <useProjectRule>false</useProjectRule>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.20">
      <testResults>${BUILD_OUTPUT_DIR}/*Result.html.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers>
        <hudson.plugins.claim.ClaimTestDataPublisher plugin="claim@2.9"/>
      </testDataPublishers>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>true</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Fingerprinter>
      <targets>${BUILD_OUTPUT_DIR}/TestCenter.Windows.bll.tar.gz, BLL_changelist*.txt, bll_idl_crc.txt</targets>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.9"/>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>engstciteam@spirent.com, ENGCIFirstResponderTeam@spirent.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.FixedTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FixedTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.13.1">
      <details>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username>spirent</username>
          <password>c3BpcmVudA==</password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username>spirent</username>
          <password>c3BpcmVudA==</password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;stc/temeva/orion-res.windows-386.zip&quot;,
            &quot;target&quot;: &quot;./orion-res.windows-386.zip&quot;,
            &quot;flat&quot;: &quot;true&quot;
        },
        {
            &quot;pattern&quot;: &quot;stc/temeva/magellan-frontend.tgz&quot;,
            &quot;target&quot;: &quot;./bin/magellan-frontend.tgz&quot;,
            &quot;flat&quot;: &quot;true&quot;
        }

    ]
}</spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <matrixParams></matrixParams>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper plugin="preSCMbuildstep@0.3">
      <buildSteps>
        <hudson.tasks.BatchFile>
          <command>setlocal enabledelayedexpansion&#xd;
SET modified=%WORKSPACE:/=\%&#xd;
if &quot;%P4CLEANWORKSPACE%&quot; == &quot;true&quot; (&#xd;
&#xd;
echo &quot;Removing %modified%&quot;&#xd;
rd /s /q %modified%&#xd;
echo 9R1Y9fE4$PSH|p4 -u tableuser -p perforce.spirentcom.com:1666 login&#xd;
p4 -u tableuser -p perforce.spirentcom.com:1666 -c jenkins-%NODE_NAME%-%JOB_NAME%-%BRANCH_NAME% sync //jenkins-%NODE_NAME%-%JOB_NAME%-%BRANCH_NAME%/...#none&#xd;
)</command>
        </hudson.tasks.BatchFile>
      </buildSteps>
      <failOnError>false</failOnError>
    </org.jenkinsci.plugins.preSCMbuildstep.PreSCMBuildStepsWrapper>
  </buildWrappers>
</project>