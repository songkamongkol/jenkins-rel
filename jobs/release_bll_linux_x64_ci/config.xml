<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description/>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>10</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain/>
      <token/>
      <room/>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>4.91_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_RUN_UNITTEST</name>
          <description>run unittest</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_PACKAGE_BUILD</name>
          <description>package build</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_OUTPUT_DIR</name>
          <description>build output dir</description>
          <defaultValue>build/il/bld_bll-el3-64_x86_64/Release/bin</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description>major minor version TODO: get this from a file</description>
          <defaultValue>4.91</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>RELEASE_BUILD</name>
          <description>Flag whether or not this build is a release build candidate. If a build is a release candidate then STC_CR license/entitlement will be disabled</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.perforce.PerforceSCM" plugin="perforce@1.3.36">
    <configVersion>2</configVersion>
    <p4User>tableuser</p4User>
    <p4Passwd/>
    <p4Port>perforceproxy.cal.ci.spirentcom.com:1999</p4Port>
    <p4Client>${JOB_NAME}_${BRANCH_NAME}</p4Client>
    <projectPath>+//TestCenter/${BRANCH_NAME}/... //ws/...
-//TestCenter/*/Layer1/...
-//TestCenter/*/userdocauto/...
-//TestCenter/*/sandbox/...
-//TestCenter/*/.../il/...
-//TestCenter/*/.../hw/...
-//TestCenter/*/.../WebHelp/...
-//TestCenter/*/content/cts/...
-//TestCenter/*/common/lib/java/...
-//TestCenter/*/common/tools/scons/...
-//TestCenter/*/framework/ui/resultsanalysis/tools/jvm/...
-//TestCenter/*/common/lib/boost_1_34_0/...
-//TestCenter/*/Bakeoff_TestCaseScripts/...
-//TestCenter/*/other/...
-//TestCenter/*/documents/...
-//TestCenter/*/schedules/...
-//TestCenter/*/scm/...
-//TestCenter/*/regression/...
+//TestCenter/${BRANCH_NAME}/build/il/... //ws/build/il/...
-//TestCenter/${BRANCH_NAME}/build/il/cli/... //ws/build/il/cli/...
-//TestCenter/${BRANCH_NAME}/build/il/testframework/... //ws/build/il/testframework/...
-//TestCenter/*/.../ui/...
+//TestCenter/${BRANCH_NAME}/common/.../ui/... //ws/common/.../ui/...
+//TestCenter/${BRANCH_NAME}/framework/ui/automation/... //ws/framework/ui/automation/...</projectPath>
    <projectOptions>noallwrite clobber nocompress unlocked nomodtime rmdir</projectOptions>
    <clientOwner/>
    <p4SysDrive>C:</p4SysDrive>
    <p4SysRoot>C:\WINDOWS</p4SysRoot>
    <browser class="hudson.plugins.perforce.browsers.P4Web">
      <url>http://jenkins.ad.spirentcom.com:5104/</url>
      <p4WebEndShite>?ac=22</p4WebEndShite>
      <p4DifEndShite>?ac=19</p4DifEndShite>
      <p4ClEndShite>?ac=10</p4ClEndShite>
    </browser>
    <p4Tool>p4</p4Tool>
    <useClientSpec>false</useClientSpec>
    <useStreamDepot>false</useStreamDepot>
    <forceSync>false</forceSync>
    <alwaysForceSync>false</alwaysForceSync>
    <dontUpdateServer>false</dontUpdateServer>
    <disableAutoSync>false</disableAutoSync>
    <disableChangeLogOnly>false</disableChangeLogOnly>
    <disableSyncOnly>false</disableSyncOnly>
    <showIntegChanges>false</showIntegChanges>
    <useOldClientName>false</useOldClientName>
    <createWorkspace>true</createWorkspace>
    <updateView>true</updateView>
    <dontRenameClient>false</dontRenameClient>
    <updateCounterValue>false</updateCounterValue>
    <dontUpdateClient>false</dontUpdateClient>
    <exposeP4Passwd>false</exposeP4Passwd>
    <wipeBeforeBuild>false</wipeBeforeBuild>
    <quickCleanBeforeBuild>false</quickCleanBeforeBuild>
    <restoreChangedDeletedFiles>false</restoreChangedDeletedFiles>
    <wipeRepoBeforeBuild>false</wipeRepoBeforeBuild>
    <firstChange>-1</firstChange>
    <fileLimit>0</fileLimit>
    <excludedFilesCaseSensitivity>true</excludedFilesCaseSensitivity>
    <slaveClientNameFormat>${basename}-${hash}</slaveClientNameFormat>
    <lineEndValue>local</lineEndValue>
    <useViewMask>true</useViewMask>
    <useViewMaskForPolling>true</useViewMaskForPolling>
    <useViewMaskForSyncing>false</useViewMaskForSyncing>
    <useViewMaskForChangeLog>false</useViewMaskForChangeLog>
    <pollOnlyOnMaster>true</pollOnlyOnMaster>
  </scm>
  <assignedNode>bllbldlnx-v26</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>if [ "$P4CLEANWORKSPACE" = "true" ]; then
	ccache -C
fi

if [ "$RELEASE_BUILD" = "true" ]; then
    cp -f $WORKSPACE/framework/bll/core/include/licensing/ga_release/ControlledReleaseCheck.h $WORKSPACE/framework/bll/core/include/licensing/ControlledReleaseCheck.h
fi


rm -rf $WORKSPACE/build/il/bld_bll-el3-64_x86_64/Release/bin/STAKCommands

rm -f BLL_Linux_x64_changelist_*.txt
echo $P4_CHANGELIST $JOB_NAME $BUILD_NUMBER &gt; BLL_Linux_x64_changelist_$P4_CHANGELIST.txt
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>python genSln.py
./scons.sh -f SConstruct.bll -j 12 --debug=time debug=0 coverage=0 target=bll-el3-64
./scons.sh -f SConstruct.bll  -j 12 --debug=time debug=0 coverage=0 target=bll-el3-64-automation-client-only</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>if [ "$BUILD_RUN_UNITTEST" = "true" ]; then
    cd $WORKSPACE/$BUILD_OUTPUT_DIR
    python $WORKSPACE/framework/tools/testRunner/testRunner.py --runInParallel=4 --bll --stak --archive
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>cd $WORKSPACE/build/il/bld_bll-el3-64-automation-client-only_x86_64/Release/bin
rm -f TestCenter*.tar.gz
if [ "$BUILD_PACKAGE_BUILD" = "true" ]; then
    python $WORKSPACE/framework/tools/buildUtil/package.py --arch-dir=Spirent_TestCenter_Application_Linux_Server --package=TestCenter 
    mv TestCenter.Linux.x64.tar.gz TestCenter.Linux.AutomationClient.x64.tar.gz
    #python $WORKSPACE/framework/tools/buildUtil/setver.py --package=TestCenter.Linux.x64.tar.gz $STC_MAJ_MIN_VERSION $P4_CHANGELIST
fi</command>
    </hudson.tasks.Shell>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>import os
import zipfile
import urllib2
import tarfile
import shutil

def _download_file_from_url(url=None):
    file_name = url.split('/')[-1]
    u = urllib2.urlopen(url)
    f = open(file_name, 'wb')
    meta = u.info()
    file_size = int(meta.getheaders("Content-Length")[0])
    print "Downloading: %s Bytes: %s" % (file_name, file_size)

    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        status = r"%10d  [%3.2f%%]" % (file_size_dl, file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1)
        print status,

    f.close()

def unzip(fname,dir_name):
    if (fname.endswith("zip")):
        zip_ref = zipfile.ZipFile(fname, 'r')
        zip_ref.extractall(dir_name)
        zip_ref.close()
        print "Extracted in %s Directory" % dir_name
    else:
        print "Not a zip file: '%s '" % fname

def extract_tarball(fname):
    if (fname.endswith("tgz")):
        tar = tarfile.open(fname, "r:gz")
        tar.extractall()
        tar.close()
    elif (fname.endswith("tar")):
       tar = tarfile.open(fname, "r:")
       tar.extractall()
       tar.close()
        
zip_filename = 'orion-res.linux-amd64.zip'
orion_res_output_dir = os.path.join(os.environ['WORKSPACE'], "build", "il", "bld_bll-el3-64_x86_64", "Release", "bin", 'orion-res')
if os.path.exists(orion_res_output_dir):
    shutil.rmtree(orion_res_output_dir) # clean up previous output dir if exists
unzip(zip_filename, orion_res_output_dir)
os.chmod(os.path.join(os.environ['WORKSPACE'], "build", "il", "bld_bll-el3-64_x86_64", "Release", "bin", 'orion-res', 'bin', 'orion-res'), 0755)
    
os.chdir('bin')
tgz_filename = 'magellan-frontend.tgz'
if os.path.exists('build'):
    shutil.rmtree('build') # clean up previous output dir from tgz file if exists
extract_tarball(tgz_filename)
shutil.move('build', os.path.join(orion_res_output_dir, 'content'))</command>
    </hudson.plugins.python.Python>
    <hudson.tasks.Shell>
      <command># creating tar ball for build output of the build command 'scons target=-j 12 --debug=time debug=0 coverage=0 target=bll-el3-64'
cd build/il/bld_bll-el3-64_x86_64/Release/bin
rm -f TestCenter*.tar.gz
if [ "$BUILD_PACKAGE_BUILD" = "true" ]; then
    python $WORKSPACE/framework/tools/buildUtil/package.py --arch-dir=Spirent_TestCenter_Application_Linux_Server --package=TestCenter
    python $WORKSPACE/framework/tools/buildUtil/package.py --arch-dir=Spirent_TestCenter_Application_Linux_Server --package=STAKCommands.beta
    mv TestCenter.Linux.x64.tar.gz TestCenter.Linux.x64.full.tar.gz
    #python $WORKSPACE/framework/tools/buildUtil/setver.py --package=TestCenter.Linux.x64.tar.gz $STC_MAJ_MIN_VERSION $P4_CHANGELIST
fi</command>
    </hudson.tasks.Shell>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>import shutil
import os

output_filename = 'orion-res'
dir_name = os.path.join(os.environ['WORKSPACE'], 'build', 'il', 'bld_bll-el3-64_x86_64', 'Release', 'bin', 'orion-res')
if os.path.exists('orion-res.zip'):
    os.remove('orion-res.zip')
shutil.make_archive(output_filename, 'zip', dir_name)</command>
    </hudson.plugins.python.Python>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>build/il/bld_bll-el3-64-automation-client-only_x86_64/Release/bin/TestCenter*.tar.gz, build/il/bld_bll-el3-64_x86_64/Release/bin/TestCenter.Linux.x64.full.tar.gz, build/il/bld_bll-el3-64_x86_64/Release/bin/STAKCommands.beta.Linux.x64.tar.gz,BLL_Linux_x64_changelist*.txt,orion-res.zip</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@2.0">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <showGraphs>false</showGraphs>
      <parsingRulesPath>/var/lib/jenkins/log_parse_rule</parsingRulesPath>
      <useProjectRule>false</useProjectRule>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.20">
      <testResults>${BUILD_OUTPUT_DIR}/*Result.html.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers>
        <hudson.plugins.claim.ClaimTestDataPublisher plugin="claim@2.9"/>
      </testDataPublishers>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Fingerprinter>
      <targets>${BUILD_OUTPUT_DIR}/TestCenter*.tar.gz, build/il/bld_bll-el3-64_x86_64/Release/bin/TestCenter.Linux.x64.full.tar.gz,BLL_Linux_x64_changelist*.txt</targets>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.9"/>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>engstciteam@spirent.com, ENGCIFirstResponderTeam@spirent.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.UnstableTrigger>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.FixedTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FixedTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern/>
      <presendScript/>
      <postsendScript/>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.13.1">
      <details>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username/>
          <password/>
        </credentials>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username/>
          <password/>
        </credentials>
        <credentialsId/>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec/>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    "files": [
        {
            "pattern": "stc/temeva/orion-res.linux-amd64.zip",
            "target": "./orion-res.linux-amd64.zip",
            "flat": "true"
        },
        {
            "pattern": "stc/temeva/magellan-frontend.tgz",
            "target": "./bin/magellan-frontend.tgz",
            "flat": "true"
        }

    ]
}</spec>
      </downloadSpec>
      <deployPattern/>
      <resolvePattern/>
      <matrixParams/>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns/>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName/>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
    <EnvInjectBuildWrapper plugin="envinject@1.89">
      <info>
        <propertiesContent>LD_LIBRARY_PATH=/usr/gcc_4_9/lib:$LD_LIBRARY_PATH
PATH=/usr/gcc_4_9/bin:$PATH</propertiesContent>
        <loadFilesFromMaster>false</loadFilesFromMaster>
      </info>
    </EnvInjectBuildWrapper>
  </buildWrappers>
</project>