<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>*** ---- This job is for Full STC Linux 64-bit BLL packaging --- ***
Sync SCM build scripts and other files as needed for packaging.&lt;br&gt;
Retrieve TestCenter.Linux.x64.full.tar.gz files from bll_linux build.&lt;br&gt;
Retrieve ResultsReporter.Unix.tar.gz file from integration_package_bll_windows build.&lt;br&gt;
Extract TestCenter.Linux.x64.full.tar.gz.&lt;br&gt;
Extract ResultsReporter.Unix.tar.gz&lt;br&gt;
Run setver.py to set the version of the TestCenter binary files.&lt;br&gt;
Run ci_make_tarballs.pl to create Linux BLL tarballs&lt;br&gt;
Copy build results to \\martin\archive\pv\TestCenter\4.10\Engineering_Builds\integration\BUILDVERSION&lt;br&gt;
Jenkins Node(s): spccalengec01,spccalengec02</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>5.11_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_OUTPUT_DIR</name>
          <description>build output dir</description>
          <defaultValue>Spirent_TestCenter_Application_Linux_Server</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description>major minor version</description>
          <defaultValue>5.11</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BLL_BUILD_NUMBER</name>
          <description></description>
          <defaultValue>BAD_BUILD_NUMBER</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SOURCE_OS</name>
          <description></description>
          <defaultValue>EL3Linux64</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>DEPENDENT_JOB_NAME</name>
          <description></description>
          <defaultValue>release_bll_linux_packaging</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>RELEASE_TYPE</name>
          <description></description>
          <defaultValue>RELEASE</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.p4.PerforceScm" plugin="p4@1.7.7">
    <credential>scmbuild</credential>
    <workspace class="org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl">
      <charset>none</charset>
      <pinHost>false</pinHost>
      <name>jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}</name>
      <spec>
        <allwrite>false</allwrite>
        <clobber>false</clobber>
        <compress>false</compress>
        <locked>false</locked>
        <modtime>false</modtime>
        <rmdir>false</rmdir>
        <streamName></streamName>
        <line>LOCAL</line>
        <view>//SCM/Build_Scripts/STC_Build_Scripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/Build_Scripts/STC_Build_Scripts/...
//SCM/Scripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/Build_Scripts/Scripts/...
//TestCenter/${BRANCH_NAME}/framework/tools/buildUtil/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/tools/buildUtil/...
//TestCenter/${BRANCH_NAME}/framework/ui/resultsanalysis/src/com/caw/analyzer/about.properties //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/ui/resultsanalysis/src/com/caw/analyzer/about.properties 
//TestCenter/${BRANCH_NAME}/framework/automation/scripting/stc/SampleScripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/SampleScripts/...
//TestCenter/${BRANCH_NAME}/content/traffic/l4l7/templates/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/Spirent_TestCenter_Application_Linux_Server/Dpg/...
//TestCenter/${BRANCH_NAME}/content/traffic/l4l7/tools/DpgUpdate/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/Spirent_TestCenter_Application_Linux_Server/Dpg/DpgUpdate/...
//TestCenter/profx_iso/Labserver/rpms/sessionLicensing/RPMS/x86/postinstall //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/session_licensing/postinstall
//TestCenter/${BRANCH_NAME}/content/HltAPI/SampleScripts/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/HltAPI/SampleScripts/...
//TestCenter/${BRANCH_NAME}/content/HltAPI/SourceCode/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/HltAPI/SourceCode/...
//TestCenter/${BRANCH_NAME}/content/HltAPI/build/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/content/HltAPI/build/...</view>
        <type>WRITABLE</type>
        <serverID></serverID>
        <backup>false</backup>
      </spec>
    </workspace>
    <populate class="org.jenkinsci.plugins.p4.populate.SyncOnlyImpl">
      <have>true</have>
      <force>true</force>
      <modtime>false</modtime>
      <quiet>true</quiet>
      <pin></pin>
      <parallel>
        <enable>false</enable>
        <threads>4</threads>
        <minfiles>1</minfiles>
        <minbytes>1024</minbytes>
      </parallel>
      <revert>false</revert>
    </populate>
  </scm>
  <assignedNode>relpkg-05</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>true</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <customWorkspace>${JOB_NAME}</customWorkspace>
  <builders>
    <hudson.tasks.BatchFile>
      <command>echo Make sure TestCenter.Linux.x64.tar is removed otherwise &#xd;
echo the untar command will not work&#xd;
del /f /q TestCenter.Linux.x64.tar TestCenter.Linux.x64.full.tar.gz&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38.1">
      <project>release_bll_linux_x64_ci</project>
      <filter>build/il/bld_bll-el3-64_x86_64/Release/bin/TestCenter.Linux.x64.full.tar.gz</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.PermalinkBuildSelector">
        <id>Release Build Passed Regression</id>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.BatchFile>
      <command>del /f /q BUILD_*.txt&#xd;
echo extracting TestCenter.Linux.x64.full.tar.gz file from job %COPYARTIFACT_BUILD_NUMBER_BLL_LINUX%&#xd;
rd /s /q Spirent_TestCenter_Application_Linux_Server&#xd;
&#xd;
7z x TestCenter.Linux.x64.full.tar.gz &gt; 7zextract_TestCenter.Linux.x64.full.tar.txt&#xd;
7z x -y TestCenter.Linux.x64.tar &gt;&gt; 7zextract_TestCenter.Linux.x64.full.tar.txt&#xd;
&#xd;
del /f /q stcapi_linux*.tgz&#xd;
del /f /q install_stcapi*.py&#xd;
&#xd;
copy session_licensing\postinstall Spirent_TestCenter_Application_Linux_Server\postinstall&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38.1">
      <project>release_launch_nightly_packaging</project>
      <filter>BUILD_*.txt</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38.1">
      <project>release_results_reporter_windows_ci</project>
      <filter>Unix64ResultsReporter.Unix.tar.gz</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.BatchFile>
      <command>del /f /q Unix64ResultsReporter.Unix.tar&#xd;
rd /s /q &quot;Results Reporter - Unix&quot;&#xd;
7z x Unix64ResultsReporter.Unix.tar.gz &gt; 7zextract_Unix64ResultsReporter.Unix.tar.txt&#xd;
7z x -y -o&quot;%WORKSPACE%\Results Reporter - Unix&quot; Unix64ResultsReporter.Unix.tar &gt;&gt; 7zextract_Unix64ResultsReporter.Unix.tar.txt&#xd;
&#xd;
&#xd;
SET DEPENDENT_JOB_NAME=%JOB_NAME%&#xd;
c:\python27\python %WORKSPACE%\Build_Scripts\Scripts\ci_run_jenkins_steps.py --updaterrjarversionlinux64=yes</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>&#xd;
REM -- not required for 4.77 -- copy \\storage.cal.ci.spirentcom.com\builds\stcweb\linux64\stc-rest-linux64.tar.gz stc-rest-linux64.tar.gz&#xd;
REM -- not required for 4.77 -- 7z x stc-rest-linux64.tar.gz&#xd;
REM -- not required for 4.77 -- 7z x -y -o&quot;%WORKSPACE%\Spirent_TestCenter_Application_Linux_Server&quot; stc-rest-linux64.tar&#xd;
&#xd;
REM set URL=https://jenkins.oriondev.net/job/stc-web/lastSuccessfulBuild/s3/download/stc-rest-linux64.tar.gz&#xd;
REM python %WORKSPACE%\Build_Scripts\Scripts\ci_run_jenkins_steps.py --downloadfilefromurl=%URL%&#xd;
del /f /q stc-rest*.tar&#xd;
7z x stc-rest-linux64.tar.gz&#xd;
7z x -y -o&quot;%WORKSPACE%\Spirent_TestCenter_Application_Linux_Server&quot; stc-rest-linux64.tar&#xd;
&#xd;
REM -- Process api navigator ---&#xd;
copy api-navigator %WORKSPACE%\Spirent_TestCenter_Application_Linux_Server\api-navigator&#xd;
&#xd;
REM -- Process OpenHLT ---&#xd;
del /f /q oht-rest-linux64*.tar&#xd;
7z x oht-rest-linux64.tar.gz&#xd;
7z x -y -o&quot;%WORKSPACE%\Spirent_TestCenter_Application_Linux_Server&quot; oht-rest-linux64.tar&#xd;
&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>echo &quot;Running ci_cleanup_by_date.pl.&quot;&#xd;
perl %WORKSPACE%\Build_Scripts\Scripts\ci_cleanup_by_date.pl</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>SET DEPENDENT_JOB_NAME=%JOB_NAME%&#xd;
c:\python27\python %WORKSPACE%\Build_Scripts\Scripts\ci_run_jenkins_steps.py --createpropfile=no --runsetver=no --runcopyeattomartin=no --updatepkgindextcl=yes --updatespirenttestcentertcl=yes --updatestclibtcl=yes --updategemspecversion=yes --runcimaketarballs=no --updateilversionxml=yes --updatemagellanversion=yes&#xd;
&#xd;
c:\python27\python %WORKSPACE%\Build_Scripts\Scripts\ci_run_jenkins_steps.py --createpropfile=yes --runcimaketarballs=yes --runsetver=no --runcopyeattomartin=no&#xd;
</command>
    </hudson.tasks.BatchFile>
    <hudson.tasks.BatchFile>
      <command>setlocal EnableExtensions DisableDelayedExpansion&#xd;
&#xd;
set branch=%STC_MAJ_MIN_VERSION%&#xd;
set release=\\devops-nas-1.cal.ci.spirentcom.com\builds\NoCrypto\%branch%\linux\Release_x64&#xd;
&#xd;
rd /s /q &quot;%release%&quot;&#xd;
&#xd;
if not exist %release% ( mkdir %release% )&#xd;
&#xd;
copy %WORKSPACE%\TestCenter.Linux.x64.full.tar.gz %release%\TestCenter.Linux.x64.full.tar.gz /y&#xd;
</command>
    </hudson.tasks.BatchFile>
  </builders>
  <publishers>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@2.0">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <showGraphs>false</showGraphs>
      <parsingRulesPath>/var/lib/jenkins/log_parse_rule</parsingRulesPath>
      <useProjectRule>false</useProjectRule>
    </hudson.plugins.logparser.LogParserPublisher>
    <hudson.tasks.Fingerprinter>
      <targets>TestCenter.Linux.x64.full.tar.gz,BUILD_*.txt</targets>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.9"/>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>$DEFAULT_RECIPIENTS</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript>$DEFAULT_PRESEND_SCRIPT</presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo>$DEFAULT_RECIPIENTS</replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <jenkinsci.plugins.influxdb.InfluxDbPublisher plugin="influxdb@1.10.3">
      <selectedTarget>http://influxdb-01.cal.ci.spirentcom.com:8086,release_jenkins_db</selectedTarget>
      <customPrefix></customPrefix>
    </jenkinsci.plugins.influxdb.InfluxDbPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.35.2">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
          </configs>
          <projects>release_labserver_x64_packaging</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.CurrentBuildParameters/>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>MODE=NIGHTLY
TARNAME=Spirent_TestCenter_Auto_Linux64_${STC_MAJ_MIN_VERSION}.tar.gz
OUTPUT_INSTALLER_NAME=install_Spirent_TestCenter_Auto_Linux64_${STC_MAJ_MIN_VERSION}.sh
STC_SUBDIR=Spirent_TestCenter_Application_Linux</properties>
              <textParamValueOnNewLine>false</textParamValueOnNewLine>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>release_linux_installer_packaging</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
          <triggerFromChildProjects>false</triggerFromChildProjects>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.18">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>50</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.13.1">
      <details>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username>spirent</username>
          <password>c3BpcmVudA==</password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username>spirent</username>
          <password>c3BpcmVudA==</password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;stc-web/stc-rest-linux64.tar.gz&quot;,
            &quot;target&quot;: &quot;./stc-rest-linux64.tar.gz&quot;,
            &quot;flat&quot;: &quot;true&quot;
        },
       {
            &quot;pattern&quot;: &quot;stc/api-navigator/api-navigator-linux-amd64&quot;,
            &quot;target&quot;: &quot;./api-navigator&quot;,
            &quot;flat&quot;: &quot;true&quot;
        },
       {
            &quot;pattern&quot;: &quot;stc/oht-web/oht-rest-linux64.tar.gz&quot;,
            &quot;target&quot;: &quot;./oht-rest-linux64.tar.gz&quot;,
            &quot;flat&quot;: &quot;true&quot;
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <matrixParams></matrixParams>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
  </buildWrappers>
</project>