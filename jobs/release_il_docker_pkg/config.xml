<?xml version="1.0" encoding="UTF-8"?><project>
  <actions/>
  <description>Build STC IL docker container image</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>-1</daysToKeep>
        <numToKeep>50</numToKeep>
        <artifactDaysToKeep>-1</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain/>
      <token/>
      <room/>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>BRANCH_NAME</name>
          <description>branch name</description>
          <defaultValue>5.06_rel</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description>clean build</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>BUILD_IMAGE</name>
          <description>build image</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_MAJ_MIN_VERSION</name>
          <description/>
          <defaultValue>5.06</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MODE</name>
          <description/>
          <defaultValue>NIGHTLY</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>STC_VERSION</name>
          <description>Full STC version e.g. 9.90.9903</description>
          <defaultValue/>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="org.jenkinsci.plugins.p4.PerforceScm" plugin="p4@1.7.7">
    <credential>scmbuild</credential>
    <workspace class="org.jenkinsci.plugins.p4.workspace.ManualWorkspaceImpl">
      <charset>none</charset>
      <pinHost>false</pinHost>
      <name>jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}</name>
      <spec>
        <allwrite>false</allwrite>
        <clobber>false</clobber>
        <compress>false</compress>
        <locked>false</locked>
        <modtime>false</modtime>
        <rmdir>false</rmdir>
        <streamName/>
        <line>LOCAL</line>
        <view>//TestCenter/${BRANCH_NAME}/framework/il/common/utils/docker_run/... //jenkins-${NODE_NAME}-${JOB_NAME}-${BRANCH_NAME}/framework/il/common/utils/docker_run/...</view>
        <type>WRITABLE</type>
        <serverID/>
        <backup>false</backup>
      </spec>
    </workspace>
    <populate class="org.jenkinsci.plugins.p4.populate.AutoCleanImpl">
      <have>true</have>
      <force>false</force>
      <modtime>false</modtime>
      <quiet>true</quiet>
      <pin/>
      <parallel>
        <enable>false</enable>
        <threads>4</threads>
        <minfiles>1</minfiles>
        <minbytes>1024</minbytes>
      </parallel>
      <replace>true</replace>
      <delete>true</delete>
      <tidy>false</tidy>
    </populate>
  </scm>
  <quietPeriod>45</quietPeriod>
  <assignedNode>il-docker-01</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash +xe

if [[ $MODE == *NIGHTLY* ]] 
then
export RSYNCUSER=scm
export MARTIN_ROOT=/spirent/data/archive/pv/TestCenter
export MARTIN=martin.spirentcom.com

IFS='.' read -r -a array &lt;&lt;&lt; "$STC_VERSION"
printf -v BLDNUMBER %04g ${array[2]}
export PADDED_STC_VERSION=${STC_MAJ_MIN_VERSION}.${BLDNUMBER}
export BUILD_DIR=$MARTIN_ROOT/$STC_MAJ_MIN_VERSION/Engineering_Builds/IL/${PADDED_STC_VERSION}

export RAWIMAGE_SRC=$BUILD_DIR/rawimg/qemu.512-${PADDED_STC_VERSION}.img.gz
export OUTDIR=$WORKSPACE/build/il/packages/rawimg

if [ ! -d $OUTDIR ]; then
    mkdir -p $OUTDIR
fi

rm -rf $OUTDIR/*.img.gz
rm -rf $OUTDIR/*.zip

# -- rsync source qemu*.img.gz file from martin
rsync -avz ${RSYNCUSER}@${MARTIN}:$RAWIMAGE_SRC $OUTDIR

export RAWIMAGE=$OUTDIR/qemu.512-${PADDED_STC_VERSION}.img.gz

echo "RAWIMAGE=$RAWIMAGE"
echo "OUTDIR=$OUTDIR"

# -- create the docker image
sudo python $WORKSPACE/framework/il/common/utils/docker_run/build_dist.py --rawimage $RAWIMAGE --outdir $OUTDIR 

fi
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.logparser.LogParserPublisher plugin="log-parser@2.0">
      <unstableOnWarning>false</unstableOnWarning>
      <failBuildOnError>true</failBuildOnError>
      <showGraphs>false</showGraphs>
      <parsingRulesPath>/var/lib/jenkins/il_log_parse_rule</parsingRulesPath>
      <useProjectRule>false</useProjectRule>
    </hudson.plugins.logparser.LogParserPublisher>
    <org.jenkinsci.plugins.postbuildscript.PostBuildScript plugin="postbuildscript@0.17">
      <buildSteps>
        <hudson.tasks.Shell>
          <command>#!/bin/bash +xe
if [[ $MODE == *NIGHTLY* ]] 
then
export RSYNCUSER=scm
export MARTIN_ROOT=/spirent/data/archive/pv/TestCenter
export MARTIN=martin.spirentcom.com
IFS='.' read -r -a array &lt;&lt;&lt; "$STC_VERSION"
printf -v BLDNUMBER %04g ${array[2]}
export PADDED_STC_VERSION=${STC_MAJ_MIN_VERSION}.${BLDNUMBER}
export BUILD_DIR=$MARTIN_ROOT/$STC_MAJ_MIN_VERSION/Engineering_Builds/IL/${PADDED_STC_VERSION}
export OUTDIR=$WORKSPACE/build/il/packages/rawimg

# -- rsync docker image to martin
rsync -avz $OUTDIR/Spirent_TestCenter_Docker_${PADDED_STC_VERSION}.zip ${RSYNCUSER}@${MARTIN}:${BUILD_DIR}/rawimg
rsync -avz $OUTDIR/Spirent_TestCenter_Lxc_${PADDED_STC_VERSION}.zip ${RSYNCUSER}@${MARTIN}:${BUILD_DIR}/rawimg

fi</command>
        </hudson.tasks.Shell>
      </buildSteps>
      <scriptOnlyIfSuccess>true</scriptOnlyIfSuccess>
      <scriptOnlyIfFailure>false</scriptOnlyIfFailure>
      <markBuildUnstable>false</markBuildUnstable>
    </org.jenkinsci.plugins.postbuildscript.PostBuildScript>
    <hudson.plugins.claim.ClaimPublisher plugin="claim@2.9"/>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.57">
      <recipientList>somboon.ongkamongkol@spirent.com,charles.myers@spirent.com</recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.RequesterRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.CulpritsRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern/>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FailureTrigger>
      </configuredTriggers>
      <contentType>default</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>$DEFAULT_CONTENT</defaultContent>
      <attachmentsPattern/>
      <presendScript/>
      <postsendScript/>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo/>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
    <jenkinsci.plugins.influxdb.InfluxDbPublisher plugin="influxdb@1.10.3">
      <selectedTarget>http://influxdb-01.cal.ci.spirentcom.com:8086,release_jenkins_db</selectedTarget>
      <customPrefix/>
    </jenkinsci.plugins.influxdb.InfluxDbPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.18">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList/>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.8"/>
  </buildWrappers>
</project>