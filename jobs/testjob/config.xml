<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.plugins.buildblocker.BuildBlockerProperty plugin="build-blocker-plugin@1.4.1">
      <useBuildBlocker>false</useBuildBlocker>
    </hudson.plugins.buildblocker.BuildBlockerProperty>
    <hudson.plugins.libvirt.BeforeJobSnapshotJobProperty plugin="libvirt-slave@1.8.5"/>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <jenkins.plugins.slack.SlackNotifier_-SlackJobProperty plugin="slack@1.7">
      <teamDomain></teamDomain>
      <token></token>
      <room></room>
      <startNotification>false</startNotification>
      <notifySuccess>false</notifySuccess>
      <notifyAborted>false</notifyAborted>
      <notifyNotBuilt>false</notifyNotBuilt>
      <notifyUnstable>false</notifyUnstable>
      <notifyFailure>false</notifyFailure>
      <notifyBackToNormal>false</notifyBackToNormal>
      <notifyRepeatedFailure>false</notifyRepeatedFailure>
      <includeTestSummary>false</includeTestSummary>
      <showCommitList>false</showCommitList>
    </jenkins.plugins.slack.SlackNotifier_-SlackJobProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.BooleanParameterDefinition>
          <name>P4CLEANWORKSPACE</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>BUILD_OUTPUT_DIR</name>
          <description></description>
          <defaultValue>bin/Release</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ARCHANGEL_PATH</name>
          <description></description>
          <defaultValue>stc/archangel/archangel-publish/release/testcenter-v5.0.0/enhancedl47-win32.tar.gz</defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@3.3.0">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <refspec>+refs/tags/*:refs/remotes/origin/tags/* +refs/heads/stc_nova_master:refs/remotes/origin/stc_nova_master</refspec>
        <url>ssh://git@git-appsec.cal.ci.spirentcom.com:2222/git-server/repos/appsec_l4l7.git</url>
        <credentialsId>5c922c1a-3cc4-4b9c-87a7-0f81202bcd09</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/tags/rMP5.00_rel</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>content/Avalanche</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
    </extensions>
  </scm>
  <assignedNode>bllbuild-win-01</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.BatchFile>
      <command>mkdir bin&#xd;
cd bin&#xd;
mkdir Release&#xd;
exit /B 0</command>
    </hudson.tasks.BatchFile>
    <hudson.plugins.python.Python plugin="python@1.3">
      <command>import os
import zipfile
import urllib2
import tarfile
import shutil

def _download_file_from_url(url=None):
    file_name = url.split(&apos;/&apos;)[-1]
    u = urllib2.urlopen(url)
    f = open(file_name, &apos;wb&apos;)
    meta = u.info()
    file_size = int(meta.getheaders(&quot;Content-Length&quot;)[0])
    print &quot;Downloading: %s Bytes: %s&quot; % (file_name, file_size)

    file_size_dl = 0
    block_sz = 8192
    while True:
        buffer = u.read(block_sz)
        if not buffer:
            break

        file_size_dl += len(buffer)
        f.write(buffer)
        status = r&quot;%10d  [%3.2f%%]&quot; % (file_size_dl, file_size_dl * 100. / file_size)
        status = status + chr(8)*(len(status)+1)
        print status,

    f.close()

def unzip(fname,dir_name):
    if (fname.endswith(&quot;zip&quot;)):
        zip_ref = zipfile.ZipFile(fname, &apos;r&apos;)
        zip_ref.extractall(dir_name)
        zip_ref.close()
        print &quot;Extracted in %s Directory&quot; % dir_name
    else:
        print &quot;Not a zip file: &apos;%s &apos;&quot; % fname

def extract_tarball(fname):
    if ( fname.endswith(&quot;tgz&quot;) or fname.endswith(&quot;tar.gz&quot;) ):
        tar = tarfile.open(fname, &quot;r:gz&quot;)
        tar.extractall()
        tar.close()
    elif (fname.endswith(&quot;tar&quot;)):
       tar = tarfile.open(fname, &quot;r:&quot;)
       tar.extractall()
       tar.close()
        





bin_rel_dir=os.path.join(os.environ[&apos;WORKSPACE&apos;],os.environ[&apos;BUILD_OUTPUT_DIR&apos;])
os.chdir(bin_rel_dir)
archangel_web_dir = os.path.join(bin_rel_dir, &apos;web&apos;)
if os.path.exists(archangel_web_dir):
    shutil.rmtree(archangel_web_dir) # clean up previous output dir if exists
    
for file in [&apos;enhancedl47.exe&apos;, &apos;enhancedl47.yaml&apos;]:
    if os.path.exists(file):
        os.remove(file)
        
tar_filename = &apos;enhancedl47-win32.tar.gz&apos;
# extract_tarball(tar_filename)
</command>
    </hudson.plugins.python.Python>
  </builders>
  <publishers/>
  <buildWrappers>
    <org.jfrog.hudson.generic.ArtifactoryGenericConfigurator plugin="artifactory@2.13.1">
      <details>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </details>
      <resolverDetails>
        <artifactoryName>artifactory.srv.orionprod.net</artifactoryName>
        <artifactoryUrl>https://artifactory.srv.orionprod.net/artifactory</artifactoryUrl>
        <stagingPlugin/>
      </resolverDetails>
      <deployerCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </deployerCredentialsConfig>
      <resolverCredentialsConfig>
        <credentials>
          <username></username>
          <password></password>
        </credentials>
        <credentialsId></credentialsId>
        <overridingCredentials>false</overridingCredentials>
        <ignoreCredentialPluginDisabled>false</ignoreCredentialPluginDisabled>
      </resolverCredentialsConfig>
      <useSpecs>true</useSpecs>
      <uploadSpec>
        <spec></spec>
      </uploadSpec>
      <downloadSpec>
        <spec>{
    &quot;files&quot;: [
        {
            &quot;pattern&quot;: &quot;${ARCHANGEL_PATH}&quot;,
            &quot;target&quot;: &quot;${BUILD_OUTPUT_DIR}/enhancedl47-win32.tar.gz&quot;,
            &quot;flat&quot;: &quot;true&quot;
        }
    ]
}</spec>
      </downloadSpec>
      <deployPattern></deployPattern>
      <resolvePattern></resolvePattern>
      <matrixParams></matrixParams>
      <deployBuildInfo>true</deployBuildInfo>
      <includeEnvVars>false</includeEnvVars>
      <envVarsPatterns>
        <includePatterns></includePatterns>
        <excludePatterns>*password*,*secret*,*key*</excludePatterns>
      </envVarsPatterns>
      <discardOldBuilds>false</discardOldBuilds>
      <discardBuildArtifacts>true</discardBuildArtifacts>
      <asyncBuildRetention>false</asyncBuildRetention>
      <multiConfProject>false</multiConfProject>
      <customBuildName></customBuildName>
      <overrideBuildName>false</overrideBuildName>
    </org.jfrog.hudson.generic.ArtifactoryGenericConfigurator>
  </buildWrappers>
</project>